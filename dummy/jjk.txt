// import express from 'express';
// import { json } from 'body-parser';
// import { connect } from 'mongoose';
// import {postModel} from './models/post';
// import { postRouter } from './routes/post-routes';

const express = require('express');
const json = require('body-parser');
const connect = require('mongoose');
const postmodel = require('./models/post');
const postRouter = require('./routes/post-routes');
// const bodyParser = require('body-parser');
// const mongoose = require('mongoose');


const app = express();

// connect('mongodb+srv://satyam23:owJkxmpejFH2pDNJ@atlascluster.pmt5ffa.mongodb.net/node-angular?retryWrites=true&w=majority')
// .then(()=>{
//     console.log("Connected to database!!");
// })
// .catch(()=>{
//     console.log("Connection Failed!!");
// });

const connectToDB = async () => {
    try {
        await connect('mongodb+srv://satyam23:owJkxmpejFH2pDNJ@atlascluster.pmt5ffa.mongodb.net/node-angular?retryWrites=true&w=majority');
        console.log("Connected to database!!");
    } catch (error) {
        console.log("Connection failed!!");
    }
}

connectToDB();

app.use(json());

// const post = require('./models/post').default;
// import postRoutes from "./routes/post-routes";

app.use("/api/posts", postRouter);

app.use((req, res, next)=>{
    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-with, Content-Type, Accept");
    res.setHeader("Access-Control-Allow-Methods", "GET, POST, PATCH, DELETE, OPTIONS");

    next();
});

// app.post("/api/posts", (req, res, next) => {
//     const post = new postModel({
//         title: req.body.title,
//         content: req.body.content
//     });
//     postModel.save()
//     .then((result)=>{
//         res.status(201).json({
//             message: "post added successfully"
//         });
//     })
// });


// app.get('/api/posts', (req, res, next)=>{
//     postModel.find()
//     .then(result=>{
//         res.status(200).json({
//             message: "post fetched successfully",
//             retrievedPosts: result
//         });
//     });
// });

app.delete("/api/posts/:id", (req, res, next) => {
    const id = req.params.id;
    // write your response here
    postModel.deleteOne({_id: id})
    .then((result)=>{
        res.status(200).json({message: "Post deleted!!"});
    })
    
})

// export default app;